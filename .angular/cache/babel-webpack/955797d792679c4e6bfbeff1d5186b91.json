{"ast":null,"code":"import _classCallCheck from \"/Users/akagupta20/Downloads/Akash Gupta/Angular-Case-Study/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/akagupta20/Downloads/Akash Gupta/Angular-Case-Study/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ElementRef, EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nvar _c0 = [\"input\"];\nexport var TimerInputComponent = /*#__PURE__*/(function () {\n  var TimerInputComponent = /*#__PURE__*/function () {\n    function TimerInputComponent(el) {\n      _classCallCheck(this, TimerInputComponent);\n\n      this.el = el;\n      this.timer = new EventEmitter();\n      this.start = new EventEmitter();\n    }\n\n    _createClass(TimerInputComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"onStart\",\n      value: function onStart() {\n        this.start.emit(true);\n      }\n    }, {\n      key: \"onReset\",\n      value: function onReset() {\n        this.input.nativeElement.value = null;\n        this.inputValue = null;\n        this.timer.emit(this.inputValue);\n      }\n    }, {\n      key: \"onKey\",\n      value: function onKey(event) {\n        this.inputValue = event.target.value;\n        this.timer.emit(this.inputValue);\n      }\n    }]);\n\n    return TimerInputComponent;\n  }();\n\n  TimerInputComponent.ɵfac = function TimerInputComponent_Factory(t) {\n    return new (t || TimerInputComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  TimerInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimerInputComponent,\n    selectors: [[\"app-timer-input\"]],\n    viewQuery: function TimerInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    outputs: {\n      timer: \"timer\",\n      start: \"start\"\n    },\n    decls: 10,\n    vars: 0,\n    consts: [[\"for\", \"timer\"], [\"min\", \"0\", \"type\", \"number\", \"id\", \"timer\", 3, \"keyup\"], [\"input\", \"\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function TimerInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"label\", 0);\n        i0.ɵɵtext(2, \"Enter Timer Limit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1, 2);\n        i0.ɵɵlistener(\"keyup\", function TimerInputComponent_Template_input_keyup_3_listener($event) {\n          return ctx.onKey($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TimerInputComponent_Template_button_click_6_listener() {\n          return ctx.onStart();\n        });\n        i0.ɵɵtext(7, \"Start/Pause\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TimerInputComponent_Template_button_click_8_listener() {\n          return ctx.onReset();\n        });\n        i0.ɵɵtext(9, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.MatButton],\n    styles: [\"[_nghost-%COMP%]{text-align:center}div[_ngcontent-%COMP%]{padding:5px}label[_ngcontent-%COMP%]{margin-right:10px}button[_ngcontent-%COMP%]{margin:20px}\"]\n  });\n  return TimerInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}